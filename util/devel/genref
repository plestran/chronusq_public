#!/usr/bin/perl 
#Patrick Lestrange

use strict;
use warnings;
use Tie::File;

our (@file,@lines);
our $output = "chronus-ref.val";
our ($testline,$name,$jobtype,$nsteps);

#Collects all the reference values from the 
#output files taken as arguments

open(OUT, '>', $output);

for(my $i = 0; $i < scalar @ARGV; $i++){
	my @string = split /_/, $ARGV[$i];
	$testline = "$string[0]";

	open(IN, '<', $ARGV[$i]);
	while (<IN>) { 
		if ($_ =~ /job/){
			print;
			if ($_ =~ /scf/i){$jobtype = "SCF";} 
			elsif ($_ =~ /rt/i){$jobtype = "RT";}
			else {$jobtype = "RESP"; } } }
	close IN;

	tie @lines, 'Tie::File', $ARGV[$i] or die;
	for (my $j = 0; $j <= $#lines; $j++){

		if ($jobtype eq "SCF") {

			if ($lines[$j] =~ /SCF Completed/) {
				@string = split(/ +/,$lines[$j]);
				$testline = "$testline/$string[4]"; }

			if ($lines[$j] =~ / Y=/) {
				@string = split(/ +/,$lines[$j]);
				$testline = "$testline/$string[1]/$string[3]/$string[5]"; }

			if ($lines[$j] =~ /Quadrupole Moment/ and $lines[$j] !~ /Traceless/) {
				@string = split(/ +/,$lines[$j+1]);
				$testline = "$testline/$string[1]/$string[3]/$string[5]"; 
				@string = split(/ +/,$lines[$j+2]);
				$testline = "$testline/$string[3]/$string[5]"; 
				@string = split(/ +/,$lines[$j+3]);
				$testline = "$testline/$string[5]"; }
				
			if ($lines[$j] =~ /Octupole Moment/){
				@string = split(/ +/,$lines[$j+1]);
				$testline = "$testline/$string[1]/$string[3]/$string[5]"; 
				@string = split(/ +/,$lines[$j+2]);
				$testline = "$testline/$string[3]/$string[5]"; 
				@string = split(/ +/,$lines[$j+3]);
				$testline = "$testline/$string[5]"; 
				@string = split(/ +/,$lines[$j+5]);
				$testline = "$testline/$string[3]/$string[5]"; 
				@string = split(/ +/,$lines[$j+6]);
				$testline = "$testline/$string[5]"; 
				@string = split(/ +/,$lines[$j+9]);
				$testline = "$testline/$string[5]"; }

			} # SCF job

		elsif ($jobtype eq "RESP") {

			if ($lines[$j] =~ /Excited State/) {
				@string = split(/ +/,$lines[$j+1]);
				$testline = "$testline/$string[7]";
				@string = split(/ +/,$lines[$j+2]);
				$testline = "$testline/$string[3]"; }

			} # RESP job

		elsif ($jobtype eq "RT") {

			if ($lines[$j] =~ /Number of steps/) {
				@string = split(/ +/,$lines[$j]);
				$nsteps = $string[5]; }

			if ($lines[$j] =~ /Ex Dipole/) {
				@string = split(/ +/,$lines[$j+3+$nsteps]);
				for (my $i = 2; $i <= $#string; $i++){
					$testline = "$testline/$string[$i]"; } }

			} # RT job

		} #end loop over j
	untie @lines;
	if ($jobtype eq "SCF") { $testline = "$testline/SCF"; }
	elsif ($jobtype eq "RESP") { $testline = "$testline/RESP"; }
	elsif ($jobtype eq "RT") { $testline = "$testline/RT"; }
	print OUT "$testline\n";
	} #end loop over i

close OUT

